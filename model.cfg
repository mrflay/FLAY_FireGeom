class cfgSkeletons
{
	class FLAY_LineSkeleton
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] =
		{
			"S0","",
			"S1","S0",
		};
	};
	
	class FLAY_FireGeomSkeleton
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] =
		{
			"Component01",""
		};	
	};
};

class CfgModels
{
	class FLAY_FireGeom
	{
		skeletonName="FLAY_FireGeomSkeleton";
		sectionsInherit="";
		sections[]={"camo"};
		class Animations
		{
			class Hide
			{
				type = "hide";
				source = "user";
				selection = "Component01";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "1";
				animPeriod = 0.0000001;
			};
		};
	};
	class FLAY_FireGeom_Debug: FLAY_FireGeom {};
	
	class FLAY_Line
	{
		skeletonName = "FLAY_LineSkeleton";
		sectionsInherit = "";
		sections[] = {"camo"};
		class Animations
		{
			class RX
			{
				type = "rotationX";
				source = "user";
				selection = "S0";
				axis = "RX";
				memory = 1;
				sourceAddress = "loop";
				minValue = -360;
				maxValue = +360;
				angle0 = "rad -360";
				angle1 = "rad +360";
				minPhase = -360;
				maxPhase = +360;
				animPeriod = 0;
			};
			class RY
			{
				type = "rotationY";
				source = "user";
				selection = "S0";
				axis = "RY";
				memory = 1;
				sourceAddress = "loop";
				minValue = -360;
				maxValue = +360;
				angle0 = "rad -360";
				angle1 = "rad +360";
				minPhase = -360;
				maxPhase = +360;
				animPeriod = 0;
			};				
			class L0
			{
				type = "translation";
				source = "user";
				selection = "S1";
				axis = "L0";
				memory = 0;
				sourceAddress = "clamp";
				minValue = 0;
				maxValue = 50;
				minPhase = 0;
				maxPhase = 50;
				offset0 = -1;
				offset1 = 49;
				animPeriod = 0;
			};
			class R0
			{
				type = "rotation";
				source = "user";
				selection = "S0";
				axis = "R0";
				memory = 0;
				sourceAddress = "loop";
				minValue = -360;
				maxValue = +360;
				angle0 = "rad -360";
				angle1 = "rad +360";
				minPhase = -360;
				maxPhase = +360;
				animPeriod = 0;
			};
		};
	};	
};